// <auto-generated />
using System;
using Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Api.Domain.Entities.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<int?>("CountyId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("Api.Domain.Entities.CityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<double>("Lat")
                        .HasColumnType("double precision");

                    b.Property<double>("Long")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid");

                    b.Property<int?>("StateId1")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("StateId1");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Api.Domain.Entities.StateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("character varying(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Slug")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7315),
                            Initials = "AC",
                            Iso = "12",
                            Name = "Acre",
                            Slug = "acre",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7365)
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7418),
                            Initials = "AL",
                            Iso = "27",
                            Name = "Alagoas",
                            Slug = "alagoas",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7419)
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7421),
                            Initials = "AM",
                            Iso = "13",
                            Name = "Amazonas",
                            Slug = "amazonas",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7422)
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7424),
                            Initials = "AP",
                            Iso = "16",
                            Name = "Amapá",
                            Slug = "amapa",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7426)
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7427),
                            Initials = "BA",
                            Iso = "29",
                            Name = "Bahia",
                            Slug = "bahia",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7428)
                        },
                        new
                        {
                            Id = 6,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7429),
                            Initials = "CE",
                            Iso = "23",
                            Name = "Ceará",
                            Slug = "ceara",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7430)
                        },
                        new
                        {
                            Id = 7,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7431),
                            Initials = "DF",
                            Iso = "53",
                            Name = "Distrito Federal",
                            Slug = "distrito-federal",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7432)
                        },
                        new
                        {
                            Id = 8,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7434),
                            Initials = "ES",
                            Iso = "32",
                            Name = "Espírito Santo",
                            Slug = "espirito-santo",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7435)
                        },
                        new
                        {
                            Id = 9,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7438),
                            Initials = "GO",
                            Iso = "52",
                            Name = "Goiás",
                            Slug = "goias",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7439)
                        },
                        new
                        {
                            Id = 10,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7444),
                            Initials = "MA",
                            Iso = "21",
                            Name = "Maranhão",
                            Slug = "maranhao",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7445)
                        },
                        new
                        {
                            Id = 11,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7446),
                            Initials = "MG",
                            Iso = "31",
                            Name = "Minas Gerais",
                            Slug = "minas-gerais",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7447)
                        },
                        new
                        {
                            Id = 12,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7448),
                            Initials = "MS",
                            Iso = "50",
                            Name = "Mato Grosso do Sul",
                            Slug = "mato-grosso-do-sul",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7449)
                        },
                        new
                        {
                            Id = 13,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7451),
                            Initials = "MT",
                            Iso = "51",
                            Name = "Mato Grosso",
                            Slug = "mato-grosso",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7452)
                        },
                        new
                        {
                            Id = 14,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7454),
                            Initials = "PA",
                            Iso = "15",
                            Name = "Pará",
                            Slug = "para",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7454)
                        },
                        new
                        {
                            Id = 15,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7456),
                            Initials = "PB",
                            Iso = "25",
                            Name = "Paraiba",
                            Slug = "paraiba",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7457)
                        },
                        new
                        {
                            Id = 16,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7459),
                            Initials = "PE",
                            Iso = "26",
                            Name = "Pernambuco",
                            Slug = "pernambuco",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7460)
                        },
                        new
                        {
                            Id = 17,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7462),
                            Initials = "PI",
                            Iso = "22",
                            Name = "Piauí",
                            Slug = "piaui",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7463)
                        },
                        new
                        {
                            Id = 18,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7464),
                            Initials = "PR",
                            Iso = "41",
                            Name = "Paraná",
                            Slug = "parana",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7465)
                        },
                        new
                        {
                            Id = 19,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7466),
                            Initials = "RJ",
                            Iso = "33",
                            Name = "Rio de Janeiro",
                            Slug = "rio-de-janeiro",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7468)
                        },
                        new
                        {
                            Id = 20,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7469),
                            Initials = "RN",
                            Iso = "24",
                            Name = "Rio Grande do Norte",
                            Slug = "rio-grande-do-norte",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7470)
                        },
                        new
                        {
                            Id = 21,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7472),
                            Initials = "RO",
                            Iso = "11",
                            Name = "Rondônia",
                            Slug = "rondonia",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7473)
                        },
                        new
                        {
                            Id = 22,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7474),
                            Initials = "RR",
                            Iso = "14",
                            Name = "Roraima",
                            Slug = "roraima",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7475)
                        },
                        new
                        {
                            Id = 23,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7477),
                            Initials = "RS",
                            Iso = "43",
                            Name = "Rio Grande do Sul",
                            Slug = "rio-grande-do-sul",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7478)
                        },
                        new
                        {
                            Id = 24,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7480),
                            Initials = "SC",
                            Iso = "42",
                            Name = "Santa Catarina",
                            Slug = "santa-catarina",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7481)
                        },
                        new
                        {
                            Id = 25,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7482),
                            Initials = "SE",
                            Iso = "28",
                            Name = "Sergipe",
                            Slug = "sergipe",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7483)
                        },
                        new
                        {
                            Id = 26,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7485),
                            Initials = "SP",
                            Iso = "35",
                            Name = "São Paulo",
                            Slug = "sao-paulo",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7486)
                        },
                        new
                        {
                            Id = 27,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7488),
                            Initials = "TO",
                            Iso = "17",
                            Name = "Tocantins",
                            Slug = "tocantins",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 399, DateTimeKind.Local).AddTicks(7489)
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            CreateAt = new DateTime(2021, 7, 2, 15, 28, 59, 396, DateTimeKind.Local).AddTicks(9063),
                            Email = "kakoferrare87@gmail.com",
                            Name = "Kako",
                            Password = "kako123456",
                            UpdateAt = new DateTime(2021, 7, 2, 15, 28, 59, 398, DateTimeKind.Local).AddTicks(557)
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.AddressEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.CityEntity", "County")
                        .WithMany("Address")
                        .HasForeignKey("CountyId");
                });

            modelBuilder.Entity("Api.Domain.Entities.CityEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.StateEntity", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId1");
                });
#pragma warning restore 612, 618
        }
    }
}
